# Identifying the number of athletes who won a medal in both seasons
sum(df$medals.both.seasons == TRUE)
# Identifying who those athletes are
df$name[df$medals.both.seasons == TRUE]
# Subsetting the df to only those athletes
df <- df[df$medals.both.seasons == TRUE,]
df$earliest.second.medal
max(df$earliest.second.medal)
df[df$earliest.second.medal == max(df$earliest.second.medal), c(1,3)]
df[df$earliest.second.medal == max(df$earliest.second.medal), c(1,3)]
df <- data.frame(name = unique(olympic.athletes$id[olympic.athletes$both.seasons == TRUE]), medals.both.seasons = NA, earliest.second.medal = NA)
for(i in df$name){
temp.df <- olympic.athletes[olympic.athletes$id == i,8:10]
temp.df <- temp.df[temp.df$total > 0,]
if(length(unique(temp.df$season)) == 2){
df$medals.both.seasons[df$name == i] <- TRUE
earliest.summer <- min(olympic.athletes$year[olympic.athletes$id == i &
olympic.athletes$total > 0 &
olympic.athletes$season == "summer"])
earliest.winter <- min(olympic.athletes$year[olympic.athletes$id == i &
olympic.athletes$total > 0 &
olympic.athletes$season == "winter"])
df$earliest.second.medal[df$name == i] <- max(earliest.summer, earliest.winter)
} else{
df$medals.both.seasons[df$name == i] <- FALSE
}
}
sum(df$medals.both.seasons == TRUE)
# Identifying who those athletes are
df$name[df$medals.both.seasons == TRUE]
df[df$earliest.second.medal == max(df$earliest.second.medal), c(1,3)]
# Subsetting the df to only those athletes
df <- df[df$medals.both.seasons == TRUE,]
df[df$earliest.second.medal == max(df$earliest.second.medal), c(1,3)]
df
df[df$earliest.second.medal == max(df$earliest.second.medal), c(1,3)]
setwd("/Users/katievolpert/Desktop/Code/ PSCI 3800/Problem Sets/Problem Set 3")
setwd("/Users/katievolpert/Documents/GitHub/crim1200-stat/ExercisesforExam")
# Loading data
data <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/data/income.data.csv")
# Loading packages
library(ggplot2)
View(data)
# DESCRIBE QUANTITATIVELY
# Income
summary(data$income)
summary(data$income)
range(data$income)
sd(data$income) # standard deviation (units [average of the squared differences] from the mean)
var(data$income) # variance (the average of all data points in a group)
IQR(data$income)
summary(data$income)
sd(data$income)
var(data$income)
IQR(data$income)
# Histogram
ggplot(data = data, aes(x = income)) +
geom_histogram(position = "identity")
# Histogram
ggplot(data = data, aes(x = income)) +
geom_histogram(position = "identity") +
title("Title") +
xlab("Income") +
ylab("Count")
# Histogram
ggplot(data = data, aes(x = income)) +
geom_histogram(position = "identity") +
ggtitle("Title") +
xlab("Income") +
ylab("Count")
library(ggthemes)
library(ggthemes)
# Histogram
ggplot(data = data, aes(x = income)) +
geom_histogram(position = "identity") +
ggtitle("Title") +
xlab("Income") +
ylab("Count") +
theme_economist()
# Education (Categorical variable)
summary(data$education)
table(data$education)
prop.table(table(data$education))
# Histogram
ggplot(data = data, aes(x = education)) +
geom_histogram(position = "identity") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count") +
theme_economist()
# Histogram
ggplot(data = data, aes(x = education)) +
geom_histogram(position = "identity") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count")
# Barplot
ggplot(data = data, aes(x = education)) +
geom_bar(stat = "identity") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count")
# Barplot
ggplot(data = data, aes(x = education, y = table(education))) +
geom_bar(stat = "identity") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count")
# Barplot
ggplot(data = data, aes(x = education)) +
geom_bar(stat = "identity") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count")
# Barplot
ggplot(data = data, aes(x = education)) +
geom_bar(stat = "count") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count")
ggplot(data = data, aes(x = education, y = happiness)) +
geom_bar(stat = "identity")
ggplot(data = data, aes(x = education, y = happiness)) +
geom_bar(stat = "identity")  +
ggtitle("Title") +
xlab("Education Level") +
ylab("Income Level")
ggplot(data = data, aes(x = income, y = happiness)) +
geom_point(stat = "identity")  +
ggtitle("Title") +
xlab("Education Level") +
ylab("Income Level (units)")
ggplot(data = data, aes(x = income, y = happiness)) +
geom_point(stat = "identity")  +
ggtitle("Title") +
xlab("Income") +
ylab("Happiness")
cor(data$education, data$happiness, method = "pearson")
cor(data$income, data$happiness, method = "pearson")
table(data$education)
data$binary[data$education == "High school"] <- 1
data$binary <- 0
data$binary[data$education == "College"] <- 0
data$binary[data$education == "High school"] <- 1
View(data)
cor(data$binary, data$happiness)
cor(data$binary, data$happiness, method = "pearson")
summary(data$income)
sd(data$income)
var(data$income)
IQR(data$income)
table(data$income, data$education)
table(data$gender, data$education)
prop.table(table(data$gender, data$education))
# Prop contingency table of two variables
prop.table(table(data$gender, data$education))
setwd("/Users/katievolpert/Documents/GitHub/crim1200-stat/Exam1")
# Loading data
data <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/data/crime.dat.csv")
View(data)
setwd("/Users/katievolpert/Documents/GitHub/crim1200-stat/Exam1")
# Loading data
crime <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/data/crime.dat.csv")
View(crime)
summary(crime$crimetype)
table(crime$crimetype)
prop.table(table(crime$crimetype))
names(sort(table(crime$crimetype), decreasing = TRUE)[1])
prop.table(table(crime$crimetype))
ggplot(data = crime, aes(x = crimetype)) +
geom_bar(stat = "count") +
ggtitle("Title") +
xlab("Education Level") +
ylab("Count")
ggplot(data = crime, aes(x = crimetype)) +
geom_bar(stat = "count") +
ggtitle("Frequency of Crime Types") +
xlab("Crime Type") +
ylab("Count")
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram(position = "identity") +
ggtitle("Title") +
xlab("Income") +
ylab("Count") +
theme_economist()
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram(position = "identity") +
ggtitle("Frequency of Mental Health Scores") +
xlab("Mental Health Score") +
ylab("Count")
# Looking at summary statistics
summary(crime$mentalhealthscore)
IQR(crime$mentalhealthscore)
sd(crime$mentalhealthscore)
# Creating a barplot by gender and mental health scores (visual)
ggplot(data = crime, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
crime$gender_binary <- 0
crime$gender_binary[crime$gender == "female"] <- 0
crime$gender_binary[crime$gender == "male"] <- 1
cor(crime$gender_binary, crime$mentalhealthscore, method = "pearson")
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores")
ggplot(data = crime, aes(x = crimetype)) +
geom_bar(stat = "count") +
ggtitle("Frequency of Crime Types") +
xlab("Crime Type") +
ylab("Count")
summary(crime$crimetype)
table(crime$crimetype)
prop.table(table(crime$crimetype))
prop.table(table(crime$crimetype)) * 100
names(sort(table(crime$crimetype), decreasing = TRUE)[1])
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram(position = "identity") +
ggtitle("Frequency of Mental Health Scores") +
xlab("Mental Health Score") +
ylab("Count")
ggplot(data = crime, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
# Creating a barplot by gender and mental health scores (visual)
test <- melt(crime)
library(tidyverse)
# Creating a barplot by gender and mental health scores (visual)
test <- melt(crime)
library(reshape2)
# Creating a barplot by gender and mental health scores (visual)
test <- melt(crime)
View(test)
ggplot(data = test, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
test <- melt(crime)
test <- test[test$variable == "mentalhealthscore"]
ggplot(data = test, aes(x = gender, y = variable)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
# Creating a barplot by gender and mental health scores (visual)
ggplot(data = crime, aes(x = gender, y = variable)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
# Creating a barplot by gender and mental health scores (visual)
ggplot(data = crime, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
avg_by_gender <- aggregate(crime$mentalhealthscore ~ crime$gender,
FUN = mean)
View(avg_by_gender)
ggplot(data = avg_by_gender, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
colnames(avg_by_gender) <- c("gender", "menthealth")
ggplot(data = avg_by_gender, aes(x = gender, y = menthealth)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
ggplot(data = crime, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores")
cor(crime$age, crime$mentalhealthscore, method = "pearson")
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores")
ggplot(data = data, aes(x = income, y = happiness)) +
geom_point(stat = "identity")  +
ggtitle("Title") +
xlab("Income") +
ylab("Happiness") +
geom_line(method = "lm")
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores") +
geom_line(method = "lm")
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores") +
geom_smooth(method = "lm")
ggplot(data = crime, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
avg_by_gender <- aggregate(crime$mentalhealthscore ~ crime$gender,
FUN = mean)
colnames(avg_by_gender) <- c("gender", "menthealth")
ggplot(data = avg_by_gender, aes(x = gender, y = menthealth)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
male_mh <- crime[crime$gender == "male"]
female_mh <- crime[crime$gender == "female",]
# Creating two boxplots with the subset data
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender))
# Subsetting the data to create a male and female df
male_mh <- crime[crime$gender == "male",]
# Using summary to figure out the exact numbers
summary(male_mh$mentalhealthscore)
summary(female_mh$mentalhealthscore)
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender))
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender))
# Question 7
# Using summary to figure out the exact numbers
summary(male_mh$mentalhealthscore)
summary(female_mh$mentalhealthscore)
cor(crime$gender_binary, crime$mentalhealthscore, method = "pearson")
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_hist() +
facet_wrap(vars(gender))
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram() +
facet_wrap(vars(gender))
summary(male_mh$mentalhealthscore)
summary(female_mh$mentalhealthscore)
# Finding the correlation between the two variables
crime$gender_binary <- 0
crime$gender_binary[crime$gender == "female"] <- 0
crime$gender_binary[crime$gender == "male"] <- 1
cor(crime$gender_binary, crime$mentalhealthscore, method = "pearson")
summary(lm(crime$gender~crime$mentalhealthscore))
# Running a regression
summary(lm(crime$gender~crime$mentalhealthscore))
# Running a regression
summary(lm(crime$mentalhealthscore ~ crime$gender))
summary(male_mh$mentalhealthscore)
summary(female_mh$mentalhealthscore)
cor(crime$gender_binary, crime$mentalhealthscore, method = "pearson")
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram() +
facet_wrap(vars(gender))
sd(male_mh$mentalhealthscore)
sd(female_mh$mentalhealthscore)
ggsave("/Users/katievolpert/Documents/GitHub/crim1200-stat/q1bar.png")
# Looking at the frequency of different crime type values (quantitative)
summary(crime$crimetype)
table(crime$crimetype)
prop.table(table(crime$crimetype))
prop.table(table(crime$crimetype)) * 100
# Finding the mode for crime type (quantitative)
names(sort(table(crime$crimetype), decreasing = TRUE)[1])
# Question 4
# Making a histogram (visual)
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram(position = "identity") +
ggtitle("Frequency of Mental Health Scores") +
xlab("Mental Health Score") +
ylab("Count")
ggsave("/Users/katievolpert/Documents/GitHub/crim1200-stat/q4hist.png")
# Question 5
# Looking at summary statistics
summary(crime$mentalhealthscore)
sd(crime$mentalhealthscore)
IQR(crime$mentalhealthscore)
# Question 6
# Creating a barplot by gender and mental health scores (visual)
ggplot(data = crime, aes(x = gender, y = mentalhealthscore)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
# Creating a barplot using averages instead of sums (visual)
avg_by_gender <- aggregate(crime$mentalhealthscore ~ crime$gender,
FUN = mean)
colnames(avg_by_gender) <- c("gender", "menthealth")
ggplot(data = avg_by_gender, aes(x = gender, y = menthealth)) +
geom_bar(stat = "identity")  +
ggtitle("Mental Health Score by Gender") +
xlab("Gender") +
ylab("Mental Health Score")
# Subsetting the data to create a male and female df
male_mh <- crime[crime$gender == "male",]
female_mh <- crime[crime$gender == "female",]
# Creating two boxplots with the subset data
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender))
ggsave("/Users/katievolpert/Documents/GitHub/crim1200-stat/q6box.png")
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram() +
facet_wrap(vars(gender))
ggsave("/Users/katievolpert/Documents/GitHub/crim1200-stat/q6hist.png")
# Question 7
# Using summary to figure out the exact numbers
summary(male_mh$mentalhealthscore)
sd(male_mh$mentalhealthscore)
summary(female_mh$mentalhealthscore)
sd(female_mh$mentalhealthscore)
# Finding the correlation between the two variables
crime$gender_binary <- 0
crime$gender_binary[crime$gender == "female"] <- 0
crime$gender_binary[crime$gender == "male"] <- 1
cor(crime$gender_binary, crime$mentalhealthscore, method = "pearson")
# Question 8
# Creating a scatterplot of age and mental health scores
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores") +
geom_smooth(method = "lm")
ggsave("/Users/katievolpert/Documents/GitHub/crim1200-stat/q8scat.png")
ggplot(data = crime, aes(x = crimetype)) +
geom_bar(stat = "count") +
ggtitle("Frequency of Crime Types") +
xlab("Crime Type") +
ylab("Count")
ggplot(data = crime, aes(x = crimetype)) +
geom_bar(stat = "count") +
ggtitle("Frequency of Crime Types") +
xlab("Crime Type") +
ylab("Count")
ggsave("/Users/katievolpert/Documents/GitHub/crim1200-stat/q1bar.png")
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram(position = "identity") +
ggtitle("Frequency of Mental Health Scores") +
xlab("Mental Health Score") +
ylab("Count")
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender))
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram() +
facet_wrap(vars(gender))
ggplot(data = crime, aes(x = age, y = mentalhealthscore)) +
geom_point(stat = "identity")  +
ggtitle("Mental Health Scores by Age") +
xlab("Age") +
ylab("Mental Health Scores") +
geom_smooth(method = "lm")
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender)) +
ggtitle("Mental Health Score Summary Statistics by Gender")
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram() +
facet_wrap(vars(gender)) +
ggtitle("Frequency of Mental Health Scores by Gender") +
xlab("Mental Health Score") +
ylab("Frequency")
# Creating two boxplots with the subset data
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender)) +
ggtitle("Mental Health Score Summary Statistics by Gender") +
xlab("Mental Health Scores")
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_boxplot() +
facet_wrap(vars(gender)) +
ggtitle("Mental Health Score Summary Statistics by Gender") +
xlab("Mental Health Scores")
# Creating side by side histograms
ggplot(data = crime, aes(x = mentalhealthscore)) +
geom_histogram() +
facet_wrap(vars(gender)) +
ggtitle("Frequency of Mental Health Scores by Gender") +
xlab("Mental Health Score") +
ylab("Frequency")
View(male_mh)
male_mh_p1 <- male_mh[male_mh$mentalhealthscore >= 11]
male_mh_p1 <- male_mh[male_mh$mentalhealthscore >= 11,]
male_mh_p2 <- male_mh[male_mh$mentalhealthscore < 11,]
male_mh_p1 <- male_mh[male_mh$mentalhealthscore >= 11,]
male_mh_p2 <- male_mh[male_mh$mentalhealthscore < 11,]
mean(male_mh_p1$mentalhealthscore)
sd(male_mh_p1$mentalhealthscore)
mean(male_mh_p2$mentalhealthscore)
sd(male_mh_p2$mentalhealthscore)
