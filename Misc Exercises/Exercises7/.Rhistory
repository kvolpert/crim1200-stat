ment.health$`Adults Reporting Any Mental Illness in the Past Year` * 100
ment.health$`Adults Reporting Serious Mental Illness in the Past Year` <-
ment.health$`Adults Reporting Serious Mental Illness in the Past Year` * 100
# Renaming the columns
names(ment.health) <- c("state", "per.mentally.ill", "per.seriously.mentally.ill")
# Subsetting the poverty data frame
pov.rates <- pov.rates[c(1:38,40:51),1:2]
# Changing the column names
names(pov.rates) <- c("state", "poverty.rate")
# Making the poverty rate column numeric
pov.rates$poverty.rate <- gsub("%", "", pov.rates$poverty.rate)
pov.rates$poverty.rate <- as.numeric(pov.rates$poverty.rate)
# Subsetting the gun ownership data frame
gun.own <- gun.own[,1:2]
# Changing the column names to lowercase
names(gun.own) <- tolower(names(gun.own))
# Making the registered weapons column numeric
gun.own$total.registered.weapons <- gsub(",", "", gun.own$total.registered.weapons)
gun.own$total.registered.weapons <- as.numeric(gun.own$total.registered.weapons)
# Subsetting the population df
pop <- pop[c(9:16,18:59),c(1,13)]
# Renaming the columns
names(pop) <- c("state", "pop.2019")
# Fixing the state names
pop$state <- gsub("\\.", "", pop$state)
# Changing all the state columns to state abbreviations
pov.rates$state <- state.abb[match(tolower(pov.rates$state), tolower(state.name))]
gun.own$state <- state.abb[match(tolower(gun.own$state), tolower(state.name))]
ment.health$state <- state.abb[match(tolower(ment.health$state), tolower(state.name))]
pop$state <- state.abb[match(tolower(pop$state), tolower(state.name))]
# Creating a subset data frame with only 2000 and 2019
gun.laws.range <- gun.laws[gun.laws$YEAR == 2000 | gun.laws$YEAR == 2019,]
# Sum the rows of all the gun law columns
total.laws <- rowSums(gun.laws.range[, 3:ncol(gun.laws.range)])
# Create a new data frame with STATE, YEAR, and the row sums
num.laws.per.state <- data.frame(state = gun.laws.range$STATE,
year = gun.laws.range$YEAR,
total = total.laws)
# Standardizing the state columns
num.laws.per.state$state <- state.abb[match(tolower(num.laws.per.state$state), tolower(state.name))]
# Merging the gun laws df with the mass shootings df
merge.og <- merge(num.laws.per.state,
shootings.by.state,
by = "state",
all = TRUE)
# Setting all NAs equal to 0
merge.og$case[is.na(merge.og$case)] <- 0
# Subsetting the df to 2019
merge.og <- merge.og[merge.og$year == 2019,]
# Renaming the columns
names(merge.og) <- c("state", "year", "num.laws", "num.shootings")
# Merging that df with the controls
merge.pov <- merge(merge.og,
pov.rates,
by = "state",
all = TRUE)
merge.ment <- merge(merge.pov,
ment.health,
by = "state",
all = TRUE)
merge.pop <- merge(merge.ment,
pop,
by = "state",
all = TRUE)
full.merge <- merge(merge.pop,
gun.own,
by = "state",
all = TRUE)
# Adding a column to the merged data for registered weapons per capita
full.merge$gun.per.capita <- full.merge$total.registered.weapons /
full.merge$pop.2019 * 100
# Removing the original gun registration and population columns
full.merge <- full.merge[,c(1:7,10)]
View(full.merge)
# Running a regression without controls
summary(lm(num.shootings ~ num.laws,
data = full.merge))
# Running a regression with controls
summary(lm(num.shootings ~ num.laws + poverty.rate + per.mentally.ill +
per.seriously.mentally.ill + gun.per.capita,
data = full.merge))
reg.results <- broom::tidy(lm(num.shootings ~ num.laws + poverty.rate +
per.mentally.ill + per.seriously.mentally.ill +
gun.per.capita,
data = full.merge))
# Ordering the data frame by coef in ascending order
reg.results <- reg.results[order(reg.results$estimate),]
# Converting variable to a factor and setting the levels in the order they appear in
# the data frame
reg.results$term <- factor(reg.results$term, levels = unique(reg.results$term))
# Filtering out the intercept
reg.results <- reg.results[reg.results$term != "(Intercept)",]
# Filtering out percent seriously mentally ill
reg.results <- reg.results[reg.results$term != "per.seriously.mentally.ill",]
# Creating the coefficient plot
# png(file = "~/Desktop/Code/ PSCI 3800/Final Project/tables/Coefficient Plot.png")
ggplot(data = reg.results) +
aes(x = estimate, xmin = estimate - 2 * std.error, xmax = estimate + 2 * std.error, y = term) +
geom_errorbarh(color = "black", height = 0.25) +
geom_point(color = "navy", size = 2) +
ggtitle("What Affected Mass Shootings in a State in 2019?") +
labs(x = "Coefficient", y = "", subtitle = "Regression Coefficients with 95% Confidence Intervals") +
theme(panel.background = element_rect(fill = "lightskyblue1"),
plot.background = element_rect(fill = "white"),
text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 0,
size = 14,
face = "bold"))
View(reg.results)
# Setting my working directory
setwd("/Users/katievolpert/Desktop/Code/ PSCI 3800/Final Project")
library(stringr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(sf)
library(rio)
# Loading the data and a state shapefile
gun.laws <- import("data/37363-0001-Data.rda")
shootings <- read.csv("data/Mother Jones - Mass Shootings Database, 1982 - 2023 - Sheet1.csv")
gun.laws[3:length(gun.laws)] <- sapply(gun.laws[3:length(gun.laws)], as.character)
# Changing all of the columns in the gun laws data frame to indicator variables
gun.laws[gun.laws == "(0) Law provision is not present"] <- 0
gun.laws[gun.laws == "(1) Law provision is present"] <- 1
# Changing each column from characters to numeric
gun.laws[3:length(gun.laws)] <- sapply(gun.laws[3:length(gun.laws)], as.numeric)
# Subsetting the data to 2000 onwards
gun.laws <- gun.laws[gun.laws$YEAR >= 2000,]
# Fixing the classes of each column
gun.laws$STATE <- as.character(gun.laws$STATE)
gun.laws$STATE <- gsub(" ", "", gun.laws$STATE)
# Adding back the spaces in two word states
gun.laws$STATE[gun.laws$STATE == "NewHampshire"] <- "New Hampshire"
gun.laws$STATE[gun.laws$STATE == "NewYork"] <- "New York"
gun.laws$STATE[gun.laws$STATE == "NewJersey"] <- "New Jersey"
gun.laws$STATE[gun.laws$STATE == "NewMexico"] <- "New Mexico"
gun.laws$STATE[gun.laws$STATE == "NorthCarolina"] <- "North Carolina"
gun.laws$STATE[gun.laws$STATE == "NorthDakota"] <- "North Dakota"
gun.laws$STATE[gun.laws$STATE == "RhodeIsland"] <- "Rhode Island"
gun.laws$STATE[gun.laws$STATE == "SouthCarolina"] <- "South Carolina"
gun.laws$STATE[gun.laws$STATE == "SouthDakota"] <- "South Dakota"
gun.laws$STATE[gun.laws$STATE == "WestVirginia"] <- "West Virginia"
shootings$date <- parse_date_time(shootings$date, orders = c("mdy", "dmy", "ymd"))
shootings$date <- as.Date(shootings$date)
shootings$year <- year(shootings$date)
shootings$month <- month(shootings$date)
shootings$day <- day(shootings$date)
shootings <- shootings[,c(1:2,24:26,4:23)]
# Subsetting the data frame to years from 2000 to 2019
shootings <- shootings[shootings$year >= 2000 & shootings$year <= 2019,]
# Separating the location column into city and state
shootings <- separate(shootings, location, into = c("city", "state"), sep = ", ")
shootings[1,3] <- "Kentucky"
shootings[2,3] <- "Tennessee"
shootings$state <- state.abb[match(tolower(shootings$state), tolower(state.name))]
yearly.shootings <- aggregate(case ~ year,
data = shootings,
FUN = length)
# Plotting the increase
# png(file="~/Desktop/Code/ PSCI 3800/Final Project/tables/Shootings Over Time.png")
ggplot(data = yearly.shootings, mapping = aes(x = year, y = case)) +
geom_line() +
geom_point() +
ggtitle("Mass Shootings in the U.S. from 2000 to 2019") +
labs(x = "Year", y = "Number of Mass Shootings") +
ylim(0, 13) +
theme(panel.background = element_rect(fill = "lightskyblue1"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 0,
size = 14,
face = "bold"))
shootings.by.state <- aggregate(case ~ state,
data = shootings,
FUN = length)
# Ordering the data frame
shootings.by.state <- shootings.by.state[order(shootings.by.state$case),]
shootings.by.state$state <- factor(shootings.by.state$state, levels = shootings.by.state$state)
# Creating a bargraph
# png(file="~/Desktop/Code/ PSCI 3800/Final Project/tables/Shootings by State.png")
ggplot(data = shootings.by.state, aes(x = state, y = case)) +
geom_bar(stat = "identity", color = "white", fill = "royalblue") +
ggtitle("Mass Shootings by State (2000 to 2019)") +
labs(x = "", y = "Number of Mass Shootings") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, max(shootings.by.state$case) * 1.1)) +
theme(axis.text.x = element_text(size = 8, face = "bold", color = "black"),
panel.background = element_rect(fill = "lightskyblue1"),
plot.background = element_rect(fill = "white"),
panel.spacing.x = unit(0.5, "cm"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 0,
size = 14,
face = "bold")) +
geom_hline(yintercept = mean(shootings.by.state$case),
color = "black",
linetype = "dashed") +
geom_text(aes(x = 3.5, y = mean(shootings.by.state$case) + 0.5,
label = "National Average"),
color = "black")
View(shootings.by.state)
library(dplyr)
library(ggplot2)
library(purrr)
total.laws <- rowSums(gun.laws[, 3:ncol(gun.laws)])
laws.across.time <- data.frame(state = gun.laws$STATE,
year = gun.laws$YEAR,
total = total.laws)
shootings.across.time <- aggregate(case ~ state + year,
data = shootings,
FUN = length)
laws.across.time$state <- state.abb[match(tolower(laws.across.time$state), tolower(state.name))]
scatterplot.data <- merge(laws.across.time,
shootings.across.time,
by = c("state", "year"),
all.x = TRUE,
all.y = FALSE)
scatterplot.data$case[is.na(scatterplot.data$case)] <- 0
names(scatterplot.data) <- c("state", "year", "num.gun.laws", "num.shootings")
mod1 <- lm(num.gun.laws ~ factor(state) + factor(year), data = scatterplot.data)
scatterplot.data$num.gun.laws.resid <- mod1$residuals
# Regressing the number of mass shootings on state + year fixed effects
mod2 <- lm(num.shootings ~ factor(state) + factor(year), data = scatterplot.data)
scatterplot.data$num.shootings.resid <- mod2$residuals
ggplot(scatterplot.data) +
aes(x = num.gun.laws.resid, y = num.shootings.resid) +
geom_point(size = 2, color = "black") +
ggtitle("Number of Mass Shootings by Number of Gun Laws in a State (2000-2019)") +
labs(x = "Number of Gun Laws", y = "Number of Mass Shootings", subtitle = "Residualized Data") +
geom_smooth(method = "lm", size = 1.5, color = "royalblue") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 0,
size = 14,
face = "bold"))
summary(lm(num.shootings ~ num.gun.laws + state + year, data = scatterplot.data))
coef(lm(num.shootings ~ num.gun.laws + state + year, data = scatterplot.data))["num.gun.laws"]
summary(lm(num.shootings.resid ~ num.gun.laws.resid, data = scatterplot.data))
coef(lm(num.shootings.resid ~ num.gun.laws.resid, data = scatterplot.data))["num.gun.laws.resid"]
# Loading the 2019 mental health state-level data
# Link: https://www.kff.org/other/state-indicator/adults-reporting-any-mental-illness-in-the-past-year/?currentTimeframe=0&sortModel=%7B%22colId%22:%22Location%22,%22sort%22:%22asc%22%7D
ment.health <- import("data/mental ilness 2019.csv")
# Loading the 2019 poverty rate state-level data
# Link: https://www.americanprogress.org/data-view/poverty-data/poverty-data-map-tool/
pov.rates <- read.csv("data/Poverty Data 2019.csv")
# Loading the 2019 gun ownership state-level data
# Link: https://www.statista.com/study/67016/statistical-report-on-firearms-commerce-in-the-us/
gun.own <- read.csv("data/Gun Ownership 2019.csv")
# Loading the 2019 population state-level data
# Link: https://census.gov/newsroom/press-kits/2019/national-state-estimates.html
pop <- import("data/pop.xlsx")
# Subsetting the mental health data frame
ment.health <- ment.health[c(2:9,11:52),]
ment.health$`Adults Reporting Any Mental Illness in the Past Year` <-
ment.health$`Adults Reporting Any Mental Illness in the Past Year` * 100
ment.health$`Adults Reporting Serious Mental Illness in the Past Year` <-
ment.health$`Adults Reporting Serious Mental Illness in the Past Year` * 100
# Renaming the columns
names(ment.health) <- c("state", "per.mentally.ill", "per.seriously.mentally.ill")
View(ment.health)
pov.rates <- pov.rates[c(1:38,40:51),1:2]
# Changing the column names
names(pov.rates) <- c("state", "poverty.rate")
# Making the poverty rate column numeric
pov.rates$poverty.rate <- gsub("%", "", pov.rates$poverty.rate)
pov.rates$poverty.rate <- as.numeric(pov.rates$poverty.rate)
View(pov.rates)
gun.own <- gun.own[,1:2]
# Changing the column names to lowercase
names(gun.own) <- tolower(names(gun.own))
# Making the registered weapons column numeric
gun.own$total.registered.weapons <- gsub(",", "", gun.own$total.registered.weapons)
gun.own$total.registered.weapons <- as.numeric(gun.own$total.registered.weapons)
View(gun.own)
pop <- pop[c(9:16,18:59),c(1,13)]
# Renaming the columns
names(pop) <- c("state", "pop.2019")
# Fixing the state names
pop$state <- gsub("\\.", "", pop$state)
View(pop)
pov.rates$state <- state.abb[match(tolower(pov.rates$state), tolower(state.name))]
gun.own$state <- state.abb[match(tolower(gun.own$state), tolower(state.name))]
ment.health$state <- state.abb[match(tolower(ment.health$state), tolower(state.name))]
pop$state <- state.abb[match(tolower(pop$state), tolower(state.name))]
gun.laws.range <- gun.laws[gun.laws$YEAR == 2000 | gun.laws$YEAR == 2019,]
# Sum the rows of all the gun law columns
total.laws <- rowSums(gun.laws.range[, 3:ncol(gun.laws.range)])
# Create a new data frame with STATE, YEAR, and the row sums
num.laws.per.state <- data.frame(state = gun.laws.range$STATE,
year = gun.laws.range$YEAR,
total = total.laws)
num.laws.per.state$state <- state.abb[match(tolower(num.laws.per.state$state), tolower(state.name))]
merge.og <- merge(num.laws.per.state,
shootings.by.state,
by = "state",
all = TRUE)
merge.og$case[is.na(merge.og$case)] <- 0
# Subsetting the df to 2019
merge.og <- merge.og[merge.og$year == 2019,]
names(merge.og) <- c("state", "year", "num.laws", "num.shootings")
merge.pov <- merge(merge.og,
pov.rates,
by = "state",
all = TRUE)
merge.ment <- merge(merge.pov,
ment.health,
by = "state",
all = TRUE)
merge.pop <- merge(merge.ment,
pop,
by = "state",
all = TRUE)
full.merge <- merge(merge.pop,
gun.own,
by = "state",
all = TRUE)
full.merge.test <- Reduce(function(x, y) merge(x, y, by = "state", all = TRUE),
list(merge.og, pov.rates, ment.health, pop, gun.own))
View(full.merge.test)
(full.merge.test == full.merge)
sum(full.merge.test != full.merge)
full.merge <- Reduce(function(x, y) merge(x, y, by = "state", all = TRUE),
list(merge.og, pov.rates, ment.health, pop, gun.own))
full.merge$gun.per.capita <- full.merge$total.registered.weapons /
full.merge$pop.2019 * 100
# Loading the 2019 mental health state-level data
# Link: https://www.kff.org/other/state-indicator/adults-reporting-any-mental-illness-in-the-past-year/?currentTimeframe=0&sortModel=%7B%22colId%22:%22Location%22,%22sort%22:%22asc%22%7D
ment.health <- import("data/mental ilness 2019.csv")
# Loading the 2019 poverty rate state-level data
# Link: https://www.americanprogress.org/data-view/poverty-data/poverty-data-map-tool/
pov.rates <- read.csv("data/Poverty Data 2019.csv")
# Loading the 2019 gun ownership state-level data
# Link: https://www.statista.com/study/67016/statistical-report-on-firearms-commerce-in-the-us/
gun.own <- read.csv("data/Gun Ownership 2019.csv")
# Loading the 2019 population state-level data
# Link: https://census.gov/newsroom/press-kits/2019/national-state-estimates.html
pop <- import("data/pop.xlsx")
# Subsetting the mental health data frame
ment.health <- ment.health[c(2:9,11:52),]
# Changing the values to percentages
ment.health$`Adults Reporting Any Mental Illness in the Past Year` <-
ment.health$`Adults Reporting Any Mental Illness in the Past Year` * 100
ment.health$`Adults Reporting Serious Mental Illness in the Past Year` <-
ment.health$`Adults Reporting Serious Mental Illness in the Past Year` * 100
# Renaming the columns
names(ment.health) <- c("state", "per.mentally.ill", "per.seriously.mentally.ill")
# Subsetting the poverty data frame
pov.rates <- pov.rates[c(1:38,40:51),1:2]
# Changing the column names
names(pov.rates) <- c("state", "poverty.rate")
# Making the poverty rate column numeric
pov.rates$poverty.rate <- gsub("%", "", pov.rates$poverty.rate)
pov.rates$poverty.rate <- as.numeric(pov.rates$poverty.rate)
# Subsetting the gun ownership data frame
gun.own <- gun.own[,1:2]
# Changing the column names to lowercase
names(gun.own) <- tolower(names(gun.own))
# Making the registered weapons column numeric
gun.own$total.registered.weapons <- gsub(",", "", gun.own$total.registered.weapons)
gun.own$total.registered.weapons <- as.numeric(gun.own$total.registered.weapons)
# Subsetting the population df
pop <- pop[c(9:16,18:59),c(1,13)]
# Renaming the columns
names(pop) <- c("state", "pop.2019")
# Fixing the state names
pop$state <- gsub("\\.", "", pop$state)
# Changing all the state columns to state abbreviations
pov.rates$state <- state.abb[match(tolower(pov.rates$state), tolower(state.name))]
gun.own$state <- state.abb[match(tolower(gun.own$state), tolower(state.name))]
ment.health$state <- state.abb[match(tolower(ment.health$state), tolower(state.name))]
pop$state <- state.abb[match(tolower(pop$state), tolower(state.name))]
# Creating a subset data frame with only 2000 and 2019
gun.laws.range <- gun.laws[gun.laws$YEAR == 2000 | gun.laws$YEAR == 2019,]
# Sum the rows of all the gun law columns
total.laws <- rowSums(gun.laws.range[, 3:ncol(gun.laws.range)])
# Create a new data frame with STATE, YEAR, and the row sums
num.laws.per.state <- data.frame(state = gun.laws.range$STATE,
year = gun.laws.range$YEAR,
total = total.laws)
# Standardizing the state columns
num.laws.per.state$state <- state.abb[match(tolower(num.laws.per.state$state), tolower(state.name))]
# Merging the gun laws df with the mass shootings df
merge.og <- merge(num.laws.per.state,
shootings.by.state,
by = "state",
all = TRUE)
# Setting all NAs equal to 0
merge.og$case[is.na(merge.og$case)] <- 0
# Subsetting the df to 2019
merge.og <- merge.og[merge.og$year == 2019,]
# Renaming the columns
names(merge.og) <- c("state", "year", "num.laws", "num.shootings")
# Merging that df with the controls
full.merge <- Reduce(function(x, y) merge(x, y, by = "state", all = TRUE),
list(merge.og, pov.rates, ment.health, pop, gun.own))
# Adding a column to the merged data for registered weapons per capita
full.merge$guns.per.capita.rate <- full.merge$total.registered.weapons /
full.merge$pop.2019 * 100
View(full.merge)
# Removing the original gun registration and population columns
full.merge <- full.merge[,c(1:7,10)]
# Running a regression without controls
summary(lm(num.shootings ~ num.laws,
data = full.merge))
summary(lm(num.shootings ~ num.laws + poverty.rate + per.mentally.ill +
per.seriously.mentally.ill + guns.per.capita.rate,
data = full.merge))
reg.results <- broom::tidy(lm(num.shootings ~ num.laws + poverty.rate +
per.mentally.ill + per.seriously.mentally.ill +
guns.per.capita.rate,
data = full.merge))
reg.results <- reg.results[order(reg.results$estimate),]
View(reg.results)
reg.results$term <- factor(reg.results$term, levels = unique(reg.results$term))
reg.results <- reg.results[reg.results$term != "(Intercept)",]
reg.results <- reg.results[reg.results$term != "per.seriously.mentally.ill",]
reg.results[,1]
# Renaming the variables in the regression data frame
reg.results[,1] <- c("Guns Per Capita Rate", "Number of Gun Laws", "% Mentally Ill", "Poverty Rate")
ggplot(data = reg.results) +
aes(x = estimate, xmin = estimate - 2 * std.error, xmax = estimate + 2 * std.error, y = term) +
geom_errorbarh(color = "black", height = 0.25) +
geom_point(color = "navy", size = 2) +
ggtitle("What Affected Mass Shootings in a State in 2019?") +
labs(x = "Coefficient", y = "", subtitle = "Regression Coefficients with 95% Confidence Intervals") +
theme(panel.background = element_rect(fill = "lightskyblue1"),
plot.background = element_rect(fill = "white"),
text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 0,
size = 14,
face = "bold"))
?geom_bar()
?geom_bar
library(gglot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(gglot2) # always load the ggplot 2 package
install.packages("ggplot2")
library(gglot2)
library(ggplot2)
?geom_bar
# Initial analysis
summary(penguins) # tells you the min, max, mean, median, and quartiles (only for quantitative)
# Initial analysis
summary(penguin) # tells you the min, max, mean, median, and quartiles (only for quantitative)
?facet_wrap
plot(pnorm(x, mean = 100, sd = 15))
# Plotting using pnorm
rnorm(1000, mean = 100, sd = 15)
# Plotting using pnorm
pnorm(1000, mean = 100, sd = 15)
# Plotting using pnorm
rnorm(1000, mean = 100, sd = 15)
ggplot(aes(x=sample))
ggplot(aes(x=sample)) +
gg_histogram()
library(ggplot2)
ggplot(aes(x=sample)) +
gg_histogram()
ggplot(aes(x=sample)) +
ggplot_histogram()
ggplot(aes(x=sample)) +
geom_histogram()
sample <- rnorm(1000, mean = 100, sd = 15)
ggplot(aes(x=sample)) +
geom_histogram()
ggplot(sample, aes(x=sample)) +
geom_histogram()
ggplot(data.frame(sample), aes(x=sample)) +
geom_histogram()
setwd("~/Documents/GitHub/crim1200-stat/Exercises7/Number10.R")
setwd("~/Documents/GitHub/crim1200-stat/Exercises7")
cars
cars <- cars
?cars
View(cars)
summary(lm(cars$speed ~ cars$dist))
summary(lm(cars$dist ~ cars$speed))
# Graphing the variables
ggplot(cars, aes(x = speed, y = dist)) +
geom_point()
# loading packages
library(ggplot2)
# Graphing the variables
ggplot(cars, aes(x = speed, y = dist)) +
geom_point()
# Graphing the variables
ggplot(cars, aes(x = speed, y = dist)) +
geom_point() +
geom_smooth(method = lm)
summary(lm.output)
lm.output <- lm(cars$dist ~ cars$speed)
# Looking at it
summary(lm.output)
# Graphing the variables
ggplot(cars, aes(x = speed, y = dist)) +
geom_point() +
geom_smooth(method = lm)
# Looking at the residuals
lm.output$residuals
lm.output$fitted.values
# Making a fraph of the residuals + x
plot(lm.output$residuals, cars$speed)
