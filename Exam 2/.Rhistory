library(tidyverse)
library(ggplot2)
# Load data from MASS into a tibble
birthwt <- as_tibble(MASS::birthwt)
# rename variables
birthwt <- birthwt %>%
rename(birthwt.below.2500 = low,
mother.age = age,
mother.weight = lwt,
mother.smokes = smoke,
previous.prem.labor = ptl,
hypertension = ht,
uterine.irr = ui,
physician.visits = ftv,
birthwt.grams = bwt)
# and change factor level names
birthwt <- birthwt %>%
mutate(race = recode_factor(race, `1` = "white", `2` = "black", `3` = "other")) %>%
mutate_at(c("mother.smokes", "hypertension", "uterine.irr", "birthwt.below.2500"),
~ recode_factor(.x, `0` = "no", `1` = "yes"))
# now create boxplot showing how birthwt.grams varies between smoking status groups
qplot(x = mother.smokes, y = birthwt.grams,
geom = "boxplot", data = birthwt,
xlab = "Mother smokes",
ylab = "Birthweight (grams)",
fill = I("lightblue"))
View(birthwt)
# make a summary table including standard errors
birthwt %>%
group_by(mother.smokes) %>%
summarize(num.obs = n(),
mean.birthwt = round(mean(birthwt.grams), 0),
sd.birthwt = round(sd(birthwt.grams), 0),
se.birthwt = round(sd(birthwt.grams) / sqrt(num.obs), 0))
grouped_data <- aggregate(birthwt.grams ~ mother.smokes, data = birthwt,
FUN = function(x) {
num.obs <- length(x)
mean.birthwt <- round(mean(x), 0)
sd.birthwt <- round(sd(x), 0)
se.birthwt <- round(sd(x) / sqrt(num.obs), 0)
c(num.obs, mean.birthwt, sd.birthwt, se.birthwt)
})
colnames(grouped_data) <- c("mother.smokes", "num.obs", "mean.birthwt", "sd.birthwt", "se.birthwt")
# doing the same thing in base R
grouped_data <- aggregate(birthwt.grams ~ mother.smokes, data = birthwt,
FUN = function(x) {
num.obs <- length(x)
mean.birthwt <- round(mean(x), 0)
sd.birthwt <- round(sd(x), 0)
se.birthwt <- round(sd(x) / sqrt(num.obs), 0)
c(num.obs, mean.birthwt, sd.birthwt, se.birthwt)
})
# run t-test
birthwt.t.test <- t.test(birthwt.grams ~ mother.smokes, data = birthwt)
View(birthwt.t.test)
# see results of t-test
birthwt.t.test
# see only p-value
birthwt.t.test$p.value
# see only group means
birthwt.t.test$estimate
# see results of t-test
birthwt.t.test
# see results of t-test
plot(birthwt.t.test)
# see results of t-test
birthwt.t.test
# Setting working directory
setwd("~/Documents/GitHub/crim1200-stat/Exam 2")
# Loading data
data <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/Exam 2/data/initech.csv")
View(data)
# Running a linear regression
reg <- lm(data$salary ~ data$years)
plot(reg)
reg <- lm(data$salary ~ data$years)
par(mfrow=c(2,2))
plot(reg)
par(mfrow=c(1,1))
# Loading packages
library(ggplot2)
# Looking at the plot
ggplot(data, aes(x = years, y = salary)) +
geom_point()
reg.log <- lm(log(data$salary) ~ data$years)
par(mfrow=c(2,2))
plot(reg)
par(mfrow=c(1,1))
reg.log <- lm(log(data$salary) ~ data$years)
par(mfrow=c(2,2))
plot(reg.log)
par(mfrow=c(1,1))
# Looking at the summary of the transformed regression
summary(reg.log)
# Looking at the summary of both regressions
summary(reg)
# Setting my working directory
setwd("~/Documents/GitHub/crim1200-stat/Final project ideas")
# Loading the data
gunlaws <- load("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/gunlaws.rda")
View(da37363.0001)
# Loading the data
load("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/gunlaws.rda")
# Loading the data
load("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/gunlaws.rda")
# Loading the data
x <- import("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/gunlaws.rda")
# Loading packages
library(rio)
# Loading packages
library(rio)
# Loading the data
gunlaws <- import("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/gunlaws.rda")
# Loading the data
gun_laws <- import("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/gunlaws.rda")
crime <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/Final project ideas/state_crime.csv")
View(gun_laws)
View(gun_laws)
View(crime)
# Setting my working directory
setwd("~/Desktop/COMM 3180")
# Loading the data
health <- import("/Users/katievolpert/Desktop/COMM 3180/data/brfss_health_data")
health2 <- import("/Users/katievolpert/Desktop/COMM 3180/data/LLCP2022.XPT ")
health2 <- import("/Users/katievolpert/Desktop/COMM 3180/data/LLCP2022.XPT")
health2 <- import("/Users/katievolpert/Desktop/COMM 3180/data/LLCP2022.XPT ")
# Setting working directory
setwd("~/Documents/GitHub/crim1200-stat/Exam 2")
# Setting working directory
setwd("~/Documents/GitHub/crim1200-stat/Exam 2")
library(tidyr)
library(dplyr)
birthwt <- as_tibble(MASS::birthwt)
birthwt <- birthwt %>%
rename(birthwt.below.2500 = low,
mother.age = age,
mother.weight = lwt,
mother.smokes = smoke,
previous.prem.labor = ptl,
hypertension = ht,
uterine.irr = ui,
physician.visits = ftv,
birthwt.grams = bwt)
birthwt <- birthwt %>%
mutate(race = recode_factor(race, `1` = "white", `2` = "Black", `3` = "other")) %>%
mutate_at(c("mother.smokes", "hypertension", "uterine.irr", "birthwt.below.2500"),
~ recode_factor(.x, `0` = "no", `1` = "yes"))
View(birthwt)
birthwt %>%
group_by(race) %>%
summarize(mean.bwt = round(mean(birthwt.grams), 0),
se.bwt = round(sd(birthwt.grams) / sqrt(n()), 0))
birthwt.white <- birthwt[ which(birthwt$race=='white'), ]
birthwt.Black <- birthwt[ which(birthwt$race=='Black'), ]
birthwt.other <- birthwt[ which(birthwt$race=='other'), ]
View(birthwt.Black)
qqnorm(birthwt.white$birthwt.grams, main="Normal Q-Q plot for white")
qqline(birthwt.white$birthwt.grams)
qqnorm(birthwt.Black$birthwt.grams, main="Normal Q-Q plot for Black")
qqline(birthwt.Black$birthwt.grams)
qqnorm(birthwt.other$birthwt.grams, main="Normal Q-Q plot for other")
qqline(birthwt.other$birthwt.grams)
qqnorm(birthwt.white$birthwt.grams, main="Normal Q-Q plot for white")
qqline(birthwt.white$birthwt.grams) # adds a line of best fit
reg.output <- lm(birthwt.grams ~ race, data = birthwt)
summary(reg.output)
reg.output <- lm(birthwt.grams ~ race, data = birthwt)
summary(reg.output)
reg.output <- lm(birthwt.grams ~ race, data = birthwt)
anova.output <- aov(reg.output)
View(anova.output)
summary(anova.output)
anova.output1 <- aov(birthwt.grams ~ race, data = birthwt)
summary(anova.output1)
tukey.test <- TukeyHSD(x=anova.output, 'race', conf.level=0.95)
View(tukey.test)
plot(tukey.test , las=1 , col="brown")
data <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/Exam 2/data/dat.nsduh.small.1.csv")
View(data)
nrow(data)
library(ggplot2)
library(tidyverse)
ggplot(data, aes(x = age2)) +
geom_histogram()
ggplot(data, aes(x = age2)) +
geom_histogram()
ggplot(data, aes(x = sexatract)) +
geom_histogram()
ggplot(data, aes(x = speakengl)) +
geom_histogram()
ggplot(data, aes(x = irsex)) +
geom_histogram()
ggplot(data, aes(x = sexatract)) +
geom_bar()
data_sexatract <- data[!is.na(data$sexatract)]
data_sexatract <- data[!is.na(data$sexatract),]
ggplot(data_sexatract, aes(x = sexatract)) +
geom_bar()
data_sexatract <- data[data$sexatract < 90]
data_sexatract <- data[data$sexatract < 90,]
ggplot(data_sexatract, aes(x = sexatract)) +
geom_bar()
ggplot(data, aes(x = speakengl)) +
geom_bar()
ggplot(data, aes(x = irsex)) +
geom_bar()
ggplot(data, aes(x = speakengl)) +
geom_bar()
summary(data$income)
summary(data)
summary(data$age2)
table(data$sexatract)
prop.table(table(data$sexatract))
table(data$speakengl)
prop.table(table(data$speakengl))
table(data$irsex)
prop.table(table(data$irsex))
ggplot(data, aes(x = age2)) +
geom_histogram()
ggplot(data_sexatract, aes(x = sexatract)) +
geom_bar()
ggplot(data, aes(x = speakengl)) +
geom_bar()
ggplot(data, aes(x = age2)) +
geom_bar()
table(data$sexatract)
prop.table(table(data$sexatract))
table(data$age2)
prop.table(table(data$age2))
prop.table(table(data$age2)) * 100
data_sexatract <- data[data$sexatract < 90,]
ggplot(data_sexatract, aes(x = sexatract)) +
geom_bar()
table(data$sexatract)
prop.table(table(data$sexatract)) * 100
ggplot(data, aes(x = speakengl)) +
ggplot(data, aes(x = speakengl)) +
geom_bar()
ggplot(data, aes(x = speakengl)) +
geom_bar()
table(data$speakengl)
prop.table(table(data$speakengl)) * 100
ggplot(data, aes(x = irsex)) +
geom_bar()
table(data$irsex)
prop.table(table(data$irsex)) * 100
ggplot(data, aes(x=mjage, y = cigage)) +
geom_point()
men <- data[data$irsex == 1]
men <- data[data$irsex == 1,]
women <- data[data$irsex == 2,]
reg_mar <- lm(irasex ~ mjage)
reg_mar <- lm(data$irasex ~ data$mjage)
cor(data$mjage, data$cigage, method = "pearson")
table(data$sexatract, data$speakengl)
ggplot(data, aes(x = sexatraxt)) +
geom_bar() +
labs(title = "Barplot Faceted by sexatraxt") +
plot2 <- ggplot(data, aes(x = speakengl)) +
geom_bar() +
labs(title = "Barplot Faceted by speakengl") +
facet_wrap(~., ncol = 2)
ggplot(data, aes(x = sexatraxt)) +
geom_bar() +
labs(title = "Barplot Faceted by sexatraxt") +
ggplot(data, aes(x = speakengl)) +
geom_bar() +
labs(title = "Barplot Faceted by speakengl") +
facet_wrap(~., ncol = 2)
ggplot(data, aes(x = sexatraxt)) +
geom_bar() +
labs(title = "Barplot Faceted by sexatraxt") +
ggplot(data, aes(x = speakengl)) +
geom_bar() +
labs(title = "Barplot Faceted by speakengl") +
facet_wrap(~., ncol = 2)
library(tidyverse)
library(ggplot2)
data <- read.csv("/Users/katievolpert/Documents/GitHub/crim1200-stat/Exam 2/data/dat.nsduh.small.1.csv")
nrow(data)
ggplot(data, aes(x = age2)) +
geom_bar()
table(data$age2)
prop.table(table(data$age2)) * 100
ggplot(data, aes(x=mjage, y = cigage)) +
geom_point()
ggplot(data, aes(x=mjage, y = cigage)) +
geom_point()
ggplot(data, aes(x=mjage, y = cigage)) +
geom_point()
cor(data$mjage, data$cigage, method = "pearson")
View(data)
sex_and_engl <- data[,c(5:6)]
View(sex_and_engl)
test <- melt(sex_and_engl)
library(reshape2)
test <- melt(sex_and_engl)
ggplot(data, aes(x = speakengl, y = sexatract, fill = sex_atract)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
labs(x = "English Speaking", y = "Count", title = "Grouped Bar Plot") +
scale_fill_manual(values = c("Attracted" = "blue", "Not Attracted" = "red")) +
theme_minimal()
ggplot(data, aes(x = speakengl, y = sexatract, fill = sexatract)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
labs(x = "English Speaking", y = "Count", title = "Grouped Bar Plot") +
scale_fill_manual(values = c("Attracted" = "blue", "Not Attracted" = "red")) +
theme_minimal()
plot_speak_engl <- ggplot(data, aes(x = speak_engl)) +
geom_bar(fill = "blue") +
labs(x = "English Speaking", y = "Count", title = "Speak English Bar Plot") +
theme_minimal()
# Create a bar plot for 'sex_atract'
plot_sex_atract <- ggplot(data, aes(x = sex_atract)) +
geom_bar(fill = "red") +
labs(x = "Sexual Attraction", y = "Count", title = "Sexual Attraction Bar Plot") +
theme_minimal()
# Arrange the plots side by side
library(gridExtra)
grid.arrange(plot_speak_engl, plot_sex_atract, ncol = 2)
table(data$sexatract, data$speakengl)
x <- table(data$sexatract, data$speakengl)
rownames(x) <- "Sex Atract"
cor(data$sexatract, data$speakengl, method = "spearman")
cor(data$sexatract, data$speakengl, method = "kendall")
cor(data$sexatract, data$speakengl, method = "pearson")
ggplot(data, aes(x = speakengl, fill = sexatract)) +
geom_bar(position = "dodge") +
labs(x = "Speak English", y = "Count", title = "Grouped Barplot") +
scale_fill_manual(values = c("Attracted" = "blue", "Not Attracted" = "red")) +
theme_minimal()
ggplot(data, aes(x = speakengl, fill = factor(sexatract))) +
geom_bar(position = "dodge") +
labs(x = "Speak English", y = "Count", title = "Grouped Barplot") +
scale_fill_manual(values = c("Attracted" = "blue", "Not Attracted" = "red")) +
theme_minimal()
ggplot(data, aes(x = irsex, y = iralcage)) +
geom_bar()
ggplot(data, aes(x = irsex, y = iralcage)) +
geom_bar(position = "dodge")
ggplot(data, aes(x = irsex)) +
geom_bar(y = iralcage, position = "dodge")
ggplot(data, aes(x = irsex, y = iralcage, fill = irsex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "irsex", y = "iralcage", title = "Grouped Barplot")
ggplot(data, aes(x = irsex, y = iralcage)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "irsex", y = "iralcage", title = "Grouped Barplot")
ggplot(data, aes(x = irsex, y = iralcage)) +
geom_boxplot() +
labs(x = "Sex (irsex)", y = "Age (iralcage)", title = "Side-by-Side Boxplots by Sex")
ggplot(data, aes(x = irsex, y = iralcage)) +
geom_boxplot() +
labs(x = "Sex (irsex)", y = "Age (iralcage)", title = "Side-by-Side Boxplots by Sex") +
facet_grid(. ~ irsex)
summary(data$iralcage[data$irsex == 1])
summary(data$iralcage[data$irsex == 2])
men <- data[data$irsex == 1,]
women <- data[data$irsex == 2,]
# contingency table
table(men$sexatract, men$speakengl)
table(women$sexatract, men$speakengl)
# grouped barplot?
ggplot(women, aes(x = speakengl, fill = factor(sexatract))) +
geom_bar(position = "dodge") +
labs(x = "Speak English", y = "Count", title = "Grouped Barplot") +
scale_fill_manual(values = c("Attracted" = "blue", "Not Attracted" = "red")) +
theme_minimal()
# grouped barplot?
ggplot(men, aes(x = speakengl, fill = factor(sexatract))) +
geom_bar(position = "dodge") +
labs(x = "Speak English", y = "Count", title = "Grouped Barplot") +
scale_fill_manual(values = c("Attracted" = "blue", "Not Attracted" = "red")) +
theme_minimal()
data_sexatract <- ifelse(data$sexatract >= 90, NA, data$sexatract)
t_test_result <- t.test(df$marijuana_age ~ df$sex)
t_test_result
t_test_result <- t.test(df$mjage ~ df$sex)
t_test_result <- t.test(data$mjage ~ data$irsex)
t_test_result
